doctype html
html
  head
    title Palette Previewer
    link(rel='stylesheet', href='/styles.css')
  body
    label.switch.top-left
      input(type='checkbox', onclick='toggleMode()')
      span.slider.round

    a(href='/' class='title-link')
      .title-container
        h1 Kaleidoscopic

    div.centered 
      div.button-container

    div.centered
      each color, i in palette
        div(class='color-block', style=`background-color: ${color.css()}; color: ${textColors[i]};`, data-color=color.hex())

    div.code-box.centered
      pre#hexCodes
        | [
        each color, i in palette
          | "#{color.hex()}"
          if i !== palette.length - 1
            | ,
        | ]


    script.
      function toggleMode() {
        document.body.classList.toggle('dark');
      }
      
      // Copy color code to clipboard
      document.querySelectorAll('.color-block').forEach(function(colorBlock) {
        colorBlock.addEventListener('click', function() {
          var color = this.dataset.color;
          navigator.clipboard.writeText(color).then(function() {
            console.log('Copied color to clipboard:', color);
          }, function(err) {
            console.error('Could not copy color:', err);
          });
        });
      });
      
      // Helper function to convert hex to RGB
      function hexToRgb(hex) {
        var shorthandRegex = /^#?([a-f\d])([a-f\d])([a-f\d])$/i;
        hex = hex.replace(shorthandRegex, function(_, r, g, b) {
          return r + r + g + g + b + b;
        });
        var result = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(hex);
        return result ? {
          r: parseInt(result[1], 16),
          g: parseInt(result[2], 16),
          b: parseInt(result[3], 16)
        } : null;
      }

